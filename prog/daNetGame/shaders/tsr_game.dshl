include "motion_vector_access.dshl"

macro TSR_GAME(stage)
  INIT_FETCH_MOTION_VECTOR(stage, full)
  USE_FETCH_MOTION_VECTOR(stage, full)
  hlsl (stage) {
    // the first and second value is in screen space, the third is the raw depth difference (non-linear)
    float3 fetchMotionVector(float raw_depth, float2 uv, out uint is_dynamic)
    {
      is_dynamic = isGbufferDynamic(uv);

      float3 uvz = fetch_motion_vector_unjittered(uv, raw_depth);
      float prevLinearZ = linearize_z(raw_depth, zn_zfar.zw) + uvz.z;  // TODO: switch to rejection by linear Z
      float prevDepth = inv_linearizeZ(prevLinearZ, zn_zfar);
      return float3(uvz.xy, prevDepth - raw_depth);
    }
  }
endmacro
