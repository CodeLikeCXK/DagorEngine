// generated by dagor2/prog/scripts/genDasevents.das

#include "dasEvents.h"
#include <daECS/net/netEvent.h>
#include <dasModules/aotEcsEvents.h>
#include <dasModules/aotEcsEventsSq.h>
#include <ecs/scripts/sqBindEvent.h>
#include <bindQuirrelEx/autoBind.h>
#include "net/recipientFilters.h"


/// native_events

ECS_REGISTER_EVENT(ChangeServerRoute);
ECS_REGISTER_EVENT(CmdUpdateGridScale);
ECS_REGISTER_EVENT(EventAnyEntityResurrected);
ECS_REGISTER_EVENT(EventGameSessionFinished);
ECS_REGISTER_EVENT(EventGameSessionStarted);
ECS_REGISTER_EVENT(EventKeyFrameSaved);
ECS_REGISTER_EVENT(EventTickrateChanged);
ECS_REGISTER_EVENT(PossessTargetByPlayer);
ECS_REGISTER_EVENT(RequestSaveKeyFrame);
ECS_REGISTER_EVENT(ServerCreatePlayersEntities);
ECS_REGISTER_EVENT(UpdateStageGameLogic);

SQ_DEF_AUTO_BINDING_MODULE(dasEvents, "dasevents")
{
  Sqrat::Table tbl(vm);
  bind_dascript::DasEventsBind<ChangeServerRoute>::bind(vm, tbl);
  bind_dascript::DasEventsBind<CmdUpdateGridScale>::bind(vm, tbl);
  bind_dascript::DasEventsBind<EventAnyEntityResurrected>::bind(vm, tbl);
  bind_dascript::DasEventsBind<EventGameSessionFinished>::bind(vm, tbl);
  bind_dascript::DasEventsBind<EventGameSessionStarted>::bind(vm, tbl);
  bind_dascript::DasEventsBind<EventKeyFrameSaved>::bind(vm, tbl);
  bind_dascript::DasEventsBind<EventTickrateChanged>::bind(vm, tbl);
  bind_dascript::DasEventsBind<PossessTargetByPlayer>::bind(vm, tbl);
  bind_dascript::DasEventsBind<RequestSaveKeyFrame>::bind(vm, tbl);
  bind_dascript::DasEventsBind<ServerCreatePlayersEntities>::bind(vm, tbl);
  bind_dascript::DasEventsBind<UpdateStageGameLogic>::bind(vm, tbl);
  return tbl;
}
