APP = whale ;

Root    ?= ../../../.. ;
Location = prog/3rdPartyLibs/legacy_parser/$(APP) ;

PlatformArch_windows = x86_64 ;
PlatformSpec_windows = clang ;
include $(Root)/prog/_jBuild/defPlatform.jam ;

Config         = rel ;
StrictCompile  = no ;
FullOOPEnabled = yes ;
include $(Root)/prog/_jBuild/defaults.jam ; # Note - $(PlatformSpec) is not defined before this line

OutDir     = $(Root)/$(Location)/.. ;
ConsoleExe = yes ;

TargetType = exe ;
Target     = $(APP).exe ;

AddIncludes =
  $(Root)/$(Location)/nstl
  $(Root)/$(Location)/hash
;

local AllSources = [ GLOB $(Root)/$(Location) : *.cpp ] ;
Sources = nstl/stl.cpp $(AllSources:D=) ;

CPPopt += -DNO_PCRE -DLR0_SUPPRESS_PROFILING -D__B_NO_MEM_BASE_INCLUDE ; # -DNO_CPP_LOCALE
if $(Platform) in linux macOS { CPPopt += -funsigned-char ; }

if $(PlatformSpec) = clang {
  CPPopt += -Wno-potentially-evaluated-expression ;
  if $(Platform) in linux macOS { CPPopt += -Wno-logical-op-parentheses -Wno-dangling-else ; }
  if $(Platform) in linux { CPPopt += -Wno-deprecated-declarations -Wno-sometimes-uninitialized ; LINKopt = -lstdc++ ; }
}

include $(Root)/prog/_jBuild/build.jam ;
