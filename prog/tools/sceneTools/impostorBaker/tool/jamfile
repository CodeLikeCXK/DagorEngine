Root    ?= ../../../../.. ;
KernelLinkage = dynamic ;
UseD3DMulti = yes ;
UseD3DMultiList_windows = DX12 DX11 ;
UseD3DMultiList_linux   = vulkan ;
UseD3DMultiList_macOS   = Metal ;
LinuxUseX11 = no ;

Location = prog/tools/sceneTools/impostorBaker/tool ;
include $(Root)/prog/tools/tools_setup.jam ;
include $(Root)/prog/_jBuild/defaults.jam ;

if $(Platform) in windows {
  include $(Root)/prog/engine/drv/drv3d_DX12/copy_bundles.jam ;
}

TargetType  = exe ;
Target      = tools/sceneTools/impostorBaker ;
include $(Root)/prog/tools/tools_setup_outdir_bin.jam ;


AddIncludes =
  $(Root)/prog/tools/sharedInclude
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/tools/sceneTools/daEditorX/include
  $(Root)/prog/gameLibs/rendInst
  $(Root)/prog/engine/sharedInclude
  $(Root)/prog/tools/sceneTools/daEditorX/include
;

Sources =
  dagored_main.cpp
  engine.cpp
  option_parser.cpp
;

UseProgLibs =
  engine/startup
  engine/coreUtil
  engine/math
  engine/lib3d
  engine/image
  engine/shaders
  engine/workCycle

  engine/drv/drv3d_pc_multi
  engine/imgui/stub

  engine/gameRes
  engine/scene
  engine/sceneRay
  engine/guiBase
  engine/animChar
  engine/phys/physCommon

  commonFx/commonFxGame

  tools/libTools/assetMgr
  tools/libTools/assetMgrHlp
  tools/libTools/util
  tools/libTools/dtx

  gameLibs/rendInst
  gameLibs/rendInst/riFx/stub
  gameLibs/render
  gameLibs/render/volumetricLights/stub
  gameLibs/render/nodeBasedShader/stub
  gameLibs/ecs/rendInst/stub
  gameLibs/daECS/gameResStub

  tools/libTools/shaderResBuilder
  tools/sceneTools/impostorBaker/impostorUtil

  3rdPartyLibs/image/libpng-1.4.22
  3rdPartyLibs/image/psdRead
  3rdPartyLibs/arc/zlib-$(UseZlibVer)

  gameLibs/daECS/gameResStub
  gameLibs/ecs/rendInst/stub
;
if $(Platform) in linux macOS { UseProgLibs += engine/osApiWrappers/messageBox/stub ; }

ImportProgLibs = tools/libTools/daKernel ;
ImportsRelativeDir = . ;


include $(Root)/prog/_jBuild/build.jam ;
