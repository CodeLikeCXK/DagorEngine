WinSdkVer  = win.sdk.100 ;
PlatformArch_windows ?= x86_64 ;

Root    ?= ../../../.. ;
Location = prog/tools/ShaderCompiler2/hlsl2metal ;

TargetType = lib ;
Target = tools/hlsl2metal.lib ;

Sources +=
  asmShaderHLSL2Metal.cpp
  HLSL2MetalCommon.cpp
  spirv2MetalCompiler.cpp
  ../hlsl2spirv/HLSL2SpirvCommon.cpp
  hlsl2spirvCompile.cpp
  asmShaderHLSL2MetalDXC.cpp
;

AddIncludes =
  $(Root)/prog/3rdPartyLibs/metal
  $(Root)/prog/3rdPartyLibs/vulkan/glslang
  $(Root)/prog/3rdPartyLibs/vulkan/include
  $(Root)/prog/3rdPartyLibs/vulkan/spirv-tools/include
  $(Root)/prog/3rdPartyLibs/vulkan/smol-v/source
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/engine/drv/drv3d_Metal
;

UseProgLibs +=
  3rdPartyLibs/hash
  3rdPartyLibs/vulkan/smol-v
  3rdPartyLibs/metal/spirv2Metal
  3rdPartyLibs/eastl
  3rdPartyLibs/vulkan/spirv-tools
  gameLibs/spirv
;

CPPopt = -D_CROSS_TARGET_METAL=1 -DBINDUMP_TARGET_BE=0 -D_CRT_SECURE_NO_DEPRECATE -D_HAS_EXCEPTIONS=0 -D_SECURE_SCL=0 -DEXCLUDE_PSTDINT -DENABLE_HLSL=1
  # use only when it is really necessary and avoid committing it because it breaks dbg builds
  #-D_HAS_ITERATOR_DEBUGGING=1
;
if $(Platform) = macOS { CPPopt += -Wno-deprecated-declarations ; }

include $(Root)/prog/_jBuild/build.jam ;
