rule FindIOSVersionInFolder
{
  local sdkPath = $(1) ;
  local sdkPrefix = $(2) ;

  local versions = 30 29 28 27 26  18 17 16 15 ;
  local subVersions = 9 8 7 6 5 4 3 2 1 0 ;
  local passedMinVersion = no ;
  for v in $(versions) {
    for sV in $(subVersions) {
      local fullVer = $(v).$(sV) ;
      if $(fullVer) = $(iOSMinVer) {
        passedMinVersion = yes ;
      }

      local sdkName = $(sdkPrefix)$(fullVer).sdk ;
      if [ GLOB $(sdkPath)/$(sdkName) : * ] {
        if $(passedMinVersion) = yes {
          iOSMinVer = $(fullVer) ;
          echo iOSMinVer lowered to $(iOSMinVer) ;
        }

        echo iOSVer SDK $(iOSVer) not found, switching to $(fullVer) with -miphoneos-version-min=$(iOSMinVer) ;
        iOSVer = $(fullVer) ;
        return ;
      }
    }
  }

  if ! [ GLOB $(_DEVTOOL)/mac/SDKs/iPhoneOS.platform/iPhoneOS$(iOSVer).sdk : * ] && ! $(GLOBAL_BuildDevtool) {
    Exit iOSVer SDK $(iOSVer) not found ;
  }
}

if ! [ GLOB $(_DEVTOOL)/mac/SDKs/iPhoneOS.platform/iPhoneOS$(iOSVer).sdk : * ] && $(Platform) = iOS && $(PlatformArch) in armv7 armv7s arm64 arm64e {
  [ FindIOSVersionInFolder $(_DEVTOOL)/mac/SDKs/iPhoneOS.platform : iPhoneOS ] ;
}

if ! [ GLOB $(_DEVTOOL)/mac/SDKs/iPhoneSimulator.platform/iPhoneSimulator$(iOSVer).sdk : * ] && $(Platform) = iOS && $(PlatformArch) = i386 {
  [ FindIOSVersionInFolder $(_DEVTOOL)/mac/SDKs/iPhoneSimulator.platform : iPhoneSimulator ] ;
}
