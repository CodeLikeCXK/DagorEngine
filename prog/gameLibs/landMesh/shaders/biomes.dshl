float4 land_detail_mul_offset always_referenced;
texture biomeIndicesTex always_referenced;
texture biomeDetailAlbedoTexArray;
float4 biome_indices_tex_size;
buffer biome_group_indices_buffer;

macro INIT_BIOMES(stage)
  (stage) {
    land_detail_mul_offset@f4 = land_detail_mul_offset;
    biomeIndicesTex@smp2d = biomeIndicesTex;
    biome_indices_tex_size@f4 = biome_indices_tex_size; // xy: size, zw: inv size
    biome_group_indices_buffer@buf = biome_group_indices_buffer hlsl {
      StructuredBuffer<uint> biome_group_indices_buffer@buf;
    }
  }
endmacro

macro USE_BIOMES(stage)
  hlsl(stage) {
    #include "noise/Perlin2D.hlsl"
    #include "noise/Value2D.hlsl"
    int getBiomeIndex(float3 world_pos)
    {
      float2 tc = world_pos.xz * land_detail_mul_offset.xy + land_detail_mul_offset.zw;
      float2 tcCorner = tc * biome_indices_tex_size.xy - 0.5f;
      float2 useDetailTC = (floor(tcCorner) + 0.5f) * biome_indices_tex_size.zw;
      return floor(biomeIndicesTex.GatherRed(biomeIndicesTex_samplerstate, useDetailTC).x * 255 + 0.1f);
    }

    int getBiomeGroupIndex(float3 world_pos)
    {
      int biomeIndex = getBiomeIndex(world_pos);
      return structuredBufferAt(biome_group_indices_buffer, biomeIndex);
    }

    float getBiomeInfluence(float3 world_pos, int index)
    {
      float2 tc = world_pos.xz * land_detail_mul_offset.xy + land_detail_mul_offset.zw;
      tc += float2(-1, 1)*biome_indices_tex_size.zw * 0.5;
      float2 tcCorner = tc * biome_indices_tex_size.xy - 0.5f;
      float4 bilWeights;
      bilWeights.xy = frac(tcCorner);
      bilWeights.zw = saturate(1 - bilWeights.xy);
      float4 baseWeights = (bilWeights.zxxz*bilWeights.yyww);
      float4 indexComp = floor(biomeIndicesTex.GatherRed(biomeIndicesTex_samplerstate, tc) * 255 + 0.1f) == index;
      return dot(indexComp, baseWeights);
    }

    float getBiomesInfluence(float3 world_pos, int4 index)
    {
      float2 tc = world_pos.xz * land_detail_mul_offset.xy + land_detail_mul_offset.zw;
      tc += float2(-1, 1)*biome_indices_tex_size.zw * 0.5;
      float2 tcCorner = tc * biome_indices_tex_size.xy - 0.5f;
      float4 bilWeights;
      bilWeights.xy = frac(tcCorner);
      bilWeights.zw = saturate(1 - bilWeights.xy);
      float4 baseWeights = (bilWeights.zxxz*bilWeights.yyww);
      int4 indices = floor(biomeIndicesTex.GatherRed(biomeIndicesTex_samplerstate, tc) * 255 + 0.1f);
      float4 indexComp = (indices == index.xxxx) || (indices == index.yyyy) || (indices == index.zzzz) || (indices == index.wwww);
      return dot(indexComp, baseWeights);
    }
  }
endmacro
