texture water_heightmap_grid;
texture water_heightmap_pages;
float4 water_height_offset_scale__page_padding;
float4 world_to_water_heightmap;
float4 water_heightmap_page_count__det_scale;

texture water_heightmap_tex;
float4 water_heightmap_min_max;

int water_heightmap_tex_enabled = 0;
interval water_heightmap_tex_enabled : no < 1, yes;

macro INIT_WORLD_TO_WATER_HEIGHTMAP(stage)
  (stage) { world_to_water_heightmap@f4 = (world_to_water_heightmap); }
endmacro

macro INIT_WATER_HEIGHTMAP_BASE(stage, tex_or_sampler)
  INIT_WORLD_TO_WATER_HEIGHTMAP(stage)
  (stage) {
    water_heightmap_grid tex_or_sampler = water_heightmap_grid;
    water_heightmap_pages tex_or_sampler = water_heightmap_pages;
    water_height_offset_scale__page_padding@f4 = water_height_offset_scale__page_padding;
    water_heightmap_page_count__det_scale@f4 = water_heightmap_page_count__det_scale;
  }
  if (water_heightmap_tex_enabled == yes)
  {
    (stage) {
      water_heightmap_tex@smp2d = water_heightmap_tex;
      water_heightmap_tex_exists@i1 = exists_tex(water_heightmap_tex);
      water_heightmap_min_max@f4 = water_heightmap_min_max;
    }
  }
endmacro

macro INIT_WATER_HEIGHTMAP(stage)
  INIT_WATER_HEIGHTMAP_BASE(stage, @tex2d)
endmacro

macro USE_WATER_HEIGHTMAP(stage)
  hlsl(stage) {
    ##if water_heightmap_pages != NULL
      #define WATER_HEIGTMAP_PAGES_DEFINED 1
    ##else
     #define WATER_HEIGTMAP_PAGES_DEFINED 0
    ##endif

    // For NBS part of the implementation have been moved to an hlsl file
    #include "water_heigtmap.hlsl"

    void get_water_height(float2 worldPosXZ, inout float height)
    {
      ##if water_heightmap_pages != NULL
        sample_water_heightmap_pages(worldPosXZ, height);
      ##endif

      ##if water_heightmap_tex_enabled == yes
        BRANCH
        if (water_heightmap_tex_exists)
        {
          float2 tc = worldPosXZ * world_to_water_heightmap.zw + world_to_water_heightmap.xy;
          float h = tex2Dlod(water_heightmap_tex, float4(tc, 0, 0)).r;
          height = max(height, h * water_heightmap_min_max.z + water_heightmap_min_max.w);
        }
      ##endif
    }
  }
endmacro