Root    ?= ../../../.. ;
StrictCompile = yes ;
include $(Root)/prog/_jBuild/defaults.jam ;

Location = prog/gameLibs/render/denoiser ;

TargetType  = lib ;
Target      = gameLibs/render/denoiser.lib ;

local code_used = $(BVHSupport) ;
code_used ?= no ;

if $(code_used) = yes {
  if ( $(Platform) = windows && $(PlatformSpec) != clang ) || ($(Platform) != macOS && ($(PlatformArch) in arm64 arm64e x86)) {
    Echo warning: cannot build $(Target) for
      Platform=$(Platform) PlatformArch=$(PlatformArch) PlatformSpec=$(PlatformSpec), using stub ;
    code_used = no ;
  }
}

AddIncludes =
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/3rdPartyLibs/math/sse2neon
  $(Root)/prog/3rdPartyLibs/math/MathLib
;

# depend on BVHSupport as it is part of BVH stack
if $(code_used) = yes {
  Sources = denoiser.cpp ;

  # to avoid multiple binaries for linux clients, always compile this lib with SSE4
  if $(Platform) = linux && $(SSEVersion) < 4 { CPPopt += -msse4 ; }
} else {
  Sources = denoiser_stub.cpp ;
  Target = $(Target:S=-stub.lib) ;
}


include $(Root)/prog/_jBuild/build.jam ;
