Root    ?= ../../.. ;
StrictCompile = yes ;
include $(Root)/prog/_jBuild/defaults.jam ;

Location = prog/gameLibs/render ;

TargetType  = lib ;
Target      = gameLibs/render.lib ;

AddIncludes =
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/3rdPartyLibs/binPack2D/include
  $(Root)/$(Location)
  $(Root)/$(Location)/shaders
  $(Root)/prog/commonFx/commonFxGame
;

Sources =
#  bentCones.cpp
  cameraPositions.cpp
  bigLightsShadows.cpp
  tdrGpu.cpp
  toroidalStaticShadows/toroidalStaticShadowCascade.cpp
  toroidalStaticShadows/shadowDepthScroller.cpp
  toroidalStaticShadows/toroidalStaticShadows.cpp
  load_texture_array.cpp
  preIntegratedGF.cpp
  noiseTex.cpp
  noiseTexData.cpp
  gpuGrass.cpp
  fast_grass.cpp
  ssao_common.cpp
  ssao.cpp
  gtao.cpp
  mobile_ssao.cpp
  tireTracks.cpp
  clipmapDecals.cpp
  burningDecals.cpp
  clouds.cpp
  deferredRenderer.cpp
  deferredRT.cpp
  psm.cpp
  rain.cpp
  waterObjects.cpp
  xcsm.cpp
  variance.cpp
  iesTextureManager.cpp
  omniLightsManager.cpp
  spotLightsManager.cpp
  distortion.cpp
  fxaa.cpp
  partialDxtRender.cpp
  dynamicLightProbe.cpp
  randomGrass.cpp
  landMask.cpp
  editorGrass.cpp
  waterProjFx.cpp
  sphHarmCalc.cpp
  cascadeShadows.cpp
#  staticShadows.cpp
  lightCube.cpp
  downsampleDepth.cpp
  screenSpaceReflections.cpp
  tileDeferredLighting.cpp
  grassTranslucency.cpp
  globTMVars.cpp
  viewVecs.cpp
  set_reprojection.cpp
  debugTexOverlay.cpp
  debugTonemapOverlay.cpp
  debugMultiTextOverlay.cpp
  heroWetness.cpp
  motionBlur.cpp
  globe.cpp
  waterFoamTrail.cpp
  commonMeshManager.cpp
  smokeTracers.cpp
  beamTracers.cpp
  frustumClusters.cpp
  shadowSystem.cpp
  clusteredLights.cpp
  dstReadbackLights.cpp
  temporalAA.cpp
  smaa.cpp
  toroidalHeightmap.cpp
  toroidalPuddleMap.cpp
  mipRenderer.cpp
  depthAOAboveRenderer.cpp
  whiteTex.cpp
  lightProbe.cpp
  debugLightProbeSpheres.cpp
  lightProbeSpecularCubesContainer.cpp
  debugBoxRenderer.cpp
  debugLightProbeShapeRenderer.cpp
  debugGbuffer.cpp
  screenDroplets.cpp
  atlasTexManager.cpp
  coherentNoise.cpp
  tiledLights.cpp
  backBufferHolder.cpp
  gpuVisibilityTest.cpp
  voltexRenderer.cpp
  emissionColorMaps.cpp
  esmShadows.cpp
  esmAo.cpp
  dynamicQuality.cpp
  dynamicResolution.cpp
  gpuWatchMs.cpp
  graphicsAutodetect.cpp
  vertexDensityOverlay.cpp
  grassify.cpp
  driverNetworkManager.cpp
  motionVectorAccess.cpp
  sphereRenderer.cpp
  lightShadowParams.cpp
;

UseProgLibs +=
  engine/lib3d
  gameLibs/render/texcompressors
  gameLibs/render/primitiveObjects
  gameLibs/render/fx
  gameLibs/frustumCulling
  gameLibs/render/dynmodelRenderer
  gameLibs/resourcePool
;

if $(Config) != rel
{
  UseProgLibs += gameLibs/render/imGuiProfiler ;
}
else
{
  UseProgLibs += gameLibs/render/imGuiProfiler/stub ;
}

UseDebugMeshLib ?= no ;
if $(Config) != rel || $(UseDebugMeshLib) = yes {
  UseProgLibs += gameLibs/render/debugMesh ;
}
else
{
  UseProgLibs += gameLibs/render/debugMesh/stub ;
}


CPPopt = ;

if $(Platform) in windows
{
  AddLibs += OleAut32.lib ;
}
else if $(Platform) = ps4
{
}

include $(Root)/prog/_jBuild/build.jam ;
