Root    ?= ../../../../.. ;
StrictCompile = yes ;
include $(Root)/prog/_jBuild/defaults.jam ;

Location = prog/gameLibs/webui/plugins/webView ;

TargetType  = lib ;
Target      = gameLibs/webui/plugins/webview.lib ;

AddIncludes =  
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/dagorInclude
;

WebViewLocation = $(Root)/$(Location) ;

actions together quietly make_serve_files
{
  echo $(var_name) = $(ref_var) ; >$(1:S=.jam)
  call $(PYTHON_EXE) $(WebViewLocation)/make_serve_cpp.py $(1) $(var)
}
rule ServeFilesDeps dest_cpp : target
{
  for f in $($(target)) {
    local o_split = [ MATCH "([^\.\-]*)[\.\-]([^\.\-]*)?[\.\-]?([^\.\-]*)?[\.\-]?([^\.\-]*)?[\.\-]?([^\.\-]*)?" : $(f:D=) ] ;
    local o = ;
    for c in $(o_split) { if $(c) != "" { o += $(c) ; } }
    if ! [ GLOB $(dest_cpp:D) : $(o:J=_).inl ] { ALWAYS $(target) ; break ; }
  }
}
make_serve_files_DEPS = $(Root)/$(Location)/make_serve_cpp.py ;

SourcesWebFolders = 
  vue
  vue/components
  vue/core
  vue/vendor
  vue/vendor/font-awesome/css
  vue/vendor/font-awesome/fonts
;

ServeFiles =
;

AutoscanBuildLists $(SourcesWebFolders) : *.vue : ServeFiles ;
AutoscanBuildLists $(SourcesWebFolders) : *.eot : ServeFiles ;
AutoscanBuildLists $(SourcesWebFolders) : *.svg : ServeFiles ;
AutoscanBuildLists $(SourcesWebFolders) : *.ttf : ServeFiles ;
AutoscanBuildLists $(SourcesWebFolders) : *.woff : ServeFiles ;
AutoscanBuildLists $(SourcesWebFolders) : *.woff2 : ServeFiles ;
AutoscanBuildLists $(SourcesWebFolders) : *.js : ServeFiles ;
AutoscanBuildLists $(SourcesWebFolders) : *.css : ServeFiles ;
AutoscanBuildLists $(SourcesWebFolders) : *.html : ServeFiles ;

StringifySourceFile vue/index.html : vue/index.html.inl : webViewPlugin.cpp : --array ;

ServeFiles_action = make_serve_files ;
ServeFiles_dep_rule = ServeFilesDeps ;

Sources =
  ServeFiles.jamvar
  webViewPlugin.cpp
;

include $(Root)/prog/_jBuild/build.jam ;
