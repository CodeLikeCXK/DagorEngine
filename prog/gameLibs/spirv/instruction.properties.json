{
  "instructions": [
    {
      "opname": "OpNop",
      "grammar": "core",
      "properties": [
        "nop"
      ]
    },
    {
      "opname": "OpUndef",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "undef",
        "result-type"
      ]
    },
    {
      "opname": "OpSourceContinued",
      "grammar": "core",
      "properties": [
        "debug",
        "continue-source-code"
      ]
    },
    {
      "opname": "OpSource",
      "grammar": "core",
      "properties": [
        "source-code",
        "debug",
        "source-language"
      ]
    },
    {
      "opname": "OpSourceExtension",
      "grammar": "core",
      "properties": [
        "debug",
        "source-code-extension"
      ]
    },
    {
      "opname": "OpName",
      "grammar": "core",
      "properties": [
        "debug",
        "object-name"
      ]
    },
    {
      "opname": "OpMemberName",
      "grammar": "core",
      "properties": [
        "object-member-name",
        "debug"
      ]
    },
    {
      "opname": "OpString",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "source-file"
      ]
    },
    {
      "opname": "OpLine",
      "grammar": "core",
      "properties": [
        "begin-source-position",
        "action"
      ]
    },
    {
      "opname": "OpExtension",
      "grammar": "core",
      "properties": [
        "enable-extension"
      ]
    },
    {
      "opname": "OpExtInstImport",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "load-extended-grammar"
      ]
    },
    {
      "opname": "OpExtInst",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "call-extended-grammar",
        "result-type"
      ]
    },
    {
      "opname": "OpMemoryModel",
      "grammar": "core",
      "properties": [
        "set-memory-model"
      ]
    },
    {
      "opname": "OpEntryPoint",
      "grammar": "core",
      "properties": [
        "export-entry-point"
      ]
    },
    {
      "opname": "OpExecutionMode",
      "grammar": "core",
      "properties": [
        "set-execution-mode"
      ]
    },
    {
      "opname": "OpCapability",
      "grammar": "core",
      "properties": [
        "enable-capability"
      ]
    },
    {
      "opname": "OpTypeVoid",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeBool",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeInt",
      "grammar": "core",
      "properties": [
        "typedef",
        "bit-size",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeFloat",
      "grammar": "core",
      "properties": [
        "typedef",
        "bit-size",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeVector",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeMatrix",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeImage",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeSampler",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeSampledImage",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeArray",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeRuntimeArray",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeStruct",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeOpaque",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypePointer",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeFunction",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeEvent",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeDeviceEvent",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeReserveId",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeQueue",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypePipe",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeForwardPointer",
      "grammar": "core",
      "properties": [
        "forward-typedef",
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpConstantTrue",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "constant",
        "result-type"
      ]
    },
    {
      "opname": "OpConstantFalse",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "constant",
        "result-type"
      ]
    },
    {
      "opname": "OpConstant",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "constant",
        "result-type"
      ]
    },
    {
      "opname": "OpConstantComposite",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "composite-constant",
        "constant",
        "result-type"
      ]
    },
    {
      "opname": "OpConstantSampler",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "constant",
        "sampler-constant",
        "result-type"
      ]
    },
    {
      "opname": "OpConstantNull",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "constant",
        "result-type"
      ]
    },
    {
      "opname": "OpSpecConstantTrue",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "spec-constant",
        "result-type"
      ]
    },
    {
      "opname": "OpSpecConstantFalse",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "spec-constant",
        "result-type"
      ]
    },
    {
      "opname": "OpSpecConstant",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "spec-constant",
        "result-type"
      ]
    },
    {
      "opname": "OpSpecConstantComposite",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "spec-constant",
        "composite-constant",
        "result-type"
      ]
    },
    {
      "opname": "OpSpecConstantOp",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "spec-constant",
        "spec-op",
        "result-type"
      ]
    },
    {
      "opname": "OpFunction",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "function-begin",
        "result-type"
      ]
    },
    {
      "opname": "OpFunctionParameter",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "function-parameter",
        "variable",
        "result-type"
      ]
    },
    {
      "opname": "OpFunctionEnd",
      "grammar": "core",
      "properties": [
        "function-end"
      ]
    },
    {
      "opname": "OpFunctionCall",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "function-call",
        "result-type"
      ]
    },
    {
      "opname": "OpVariable",
      "grammar": "core",
      "properties": [
        "global-variable",
        "allocates-id",
        "variable",
        "result-type"
      ]
    },
    {
      "opname": "OpImageTexelPointer",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "variable",
        "result-type"
      ]
    },
    {
      "opname": "OpLoad",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpStore",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpCopyMemory",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpCopyMemorySized",
      "grammar": "core",
      "properties": [
        "trinary",
        "action"
      ]
    },
    {
      "opname": "OpAccessChain",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "variable",
        "result-type"
      ]
    },
    {
      "opname": "OpInBoundsAccessChain",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "variable",
        "result-type"
      ]
    },
    {
      "opname": "OpPtrAccessChain",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "variable",
        "result-type"
      ]
    },
    {
      "opname": "OpArrayLength",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpGenericPtrMemSemantics",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpInBoundsPtrAccessChain",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "variable",
        "result-type"
      ]
    },
    {
      "opname": "OpDecorate",
      "grammar": "core",
      "properties": [
        "adds-property"
      ]
    },
    {
      "opname": "OpMemberDecorate",
      "grammar": "core",
      "properties": [
        "adds-property",
        "member-property"
      ]
    },
    {
      "opname": "OpDecorationGroup",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "create-property-group"
      ]
    },
    {
      "opname": "OpGroupDecorate",
      "grammar": "core",
      "properties": [
        "adds-property",
        "use-property-group"
      ]
    },
    {
      "opname": "OpGroupMemberDecorate",
      "grammar": "core",
      "properties": [
        "adds-property",
        "use-property-group",
        "member-property"
      ]
    },
    {
      "opname": "OpVectorExtractDynamic",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpVectorInsertDynamic",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpVectorShuffle",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpCompositeConstruct",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpCompositeExtract",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpCompositeInsert",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpCopyObject",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpTranspose",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSampledImage",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleImplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleExplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleDrefImplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleDrefExplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleProjImplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleProjExplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleProjDrefImplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleProjDrefExplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageFetch",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageGather",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageDrefGather",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageRead",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageWrite",
      "grammar": "core",
      "properties": [
        "image-op",
        "action"
      ]
    },
    {
      "opname": "OpImage",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageQueryFormat",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageQueryOrder",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageQuerySizeLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageQuerySize",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageQueryLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageQueryLevels",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageQuerySamples",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertFToU",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertFToS",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertSToF",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertUToF",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpUConvert",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSConvert",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpFConvert",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpQuantizeToF16",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertPtrToU",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSatConvertSToU",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSatConvertUToS",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertUToPtr",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpPtrCastToGeneric",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpGenericCastToPtr",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpGenericCastToPtrExplicit",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitcast",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSNegate",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpFNegate",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpIAdd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFAdd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpISub",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFSub",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpIMul",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFMul",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUDiv",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSDiv",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFDiv",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUMod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSRem",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSMod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFRem",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFMod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpVectorTimesScalar",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpMatrixTimesScalar",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpVectorTimesMatrix",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpMatrixTimesVector",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpMatrixTimesMatrix",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpOuterProduct",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpDot",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpIAddCarry",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpISubBorrow",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUMulExtended",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSMulExtended",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpAny",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAll",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpIsNan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpIsInf",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpIsFinite",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpIsNormal",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSignBitSet",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpLessOrGreater",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpOrdered",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUnordered",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpLogicalEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpLogicalNotEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpLogicalOr",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpLogicalAnd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpLogicalNot",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSelect",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpIEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpINotEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUGreaterThan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSGreaterThan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUGreaterThanEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSGreaterThanEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpULessThan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSLessThan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpULessThanEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSLessThanEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFOrdEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFUnordEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFOrdNotEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFUnordNotEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFOrdLessThan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFUnordLessThan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFOrdGreaterThan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFUnordGreaterThan",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFOrdLessThanEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFUnordLessThanEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFOrdGreaterThanEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFUnordGreaterThanEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpShiftRightLogical",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpShiftRightArithmetic",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpShiftLeftLogical",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitwiseOr",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitwiseXor",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitwiseAnd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpNot",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitFieldInsert",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitFieldSExtract",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitFieldUExtract",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitReverse",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpBitCount",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpDPdx",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpDPdy",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpFwidth",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpDPdxFine",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpDPdyFine",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpFwidthFine",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpDPdxCoarse",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpDPdyCoarse",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpFwidthCoarse",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpEmitVertex",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpEndPrimitive",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpEmitStreamVertex",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpEndStreamPrimitive",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpControlBarrier",
      "grammar": "core",
      "properties": [
        "action",
        "scoped"
      ]
    },
    {
      "opname": "OpMemoryBarrier",
      "grammar": "core",
      "properties": [
        "action",
        "scoped"
      ]
    },
    {
      "opname": "OpAtomicLoad",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicStore",
      "grammar": "core",
      "properties": [
        "action",
        "atomic-op",
        "unary"
      ]
    },
    {
      "opname": "OpAtomicExchange",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicCompareExchange",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicCompareExchangeWeak",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicIIncrement",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicIDecrement",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicIAdd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicISub",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicSMin",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicUMin",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicSMax",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicUMax",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicAnd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicOr",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicXor",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpPhi",
      "grammar": "core",
      "properties": [
        "phi",
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpLoopMerge",
      "grammar": "core",
      "properties": [
        "loop-merge",
        "control-flow"
      ]
    },
    {
      "opname": "OpSelectionMerge",
      "grammar": "core",
      "properties": [
        "control-flow",
        "selection-merge"
      ]
    },
    {
      "opname": "OpLabel",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "block-begin"
      ]
    },
    {
      "opname": "OpBranch",
      "grammar": "core",
      "properties": [
        "branch",
        "ends-block"
      ]
    },
    {
      "opname": "OpBranchConditional",
      "grammar": "core",
      "properties": [
        "branch-conditional",
        "ends-block"
      ]
    },
    {
      "opname": "OpSwitch",
      "grammar": "core",
      "properties": [
        "ends-block",
        "switch-section"
      ]
    },
    {
      "opname": "OpKill",
      "grammar": "core",
      "properties": [
        "abort",
        "ends-block"
      ]
    },
    {
      "opname": "OpReturn",
      "grammar": "core",
      "properties": [
        "ends-block",
        "exit-function"
      ]
    },
    {
      "opname": "OpReturnValue",
      "grammar": "core",
      "properties": [
        "function-result",
        "ends-block",
        "exit-function"
      ]
    },
    {
      "opname": "OpUnreachable",
      "grammar": "core",
      "properties": [
        "ends-block"
      ]
    },
    {
      "opname": "OpLifetimeStart",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpLifetimeStop",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpGroupAsyncCopy",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupWaitEvents",
      "grammar": "core",
      "properties": [
        "action",
        "scoped"
      ]
    },
    {
      "opname": "OpGroupAll",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupAny",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupBroadcast",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupIAdd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupFAdd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupFMin",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupUMin",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupSMin",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupFMax",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupUMax",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupSMax",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpReadPipe",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpWritePipe",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpReservedReadPipe",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpReservedWritePipe",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpReserveReadPipePackets",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpReserveWritePipePackets",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpCommitReadPipe",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpCommitWritePipe",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpIsValidReserveId",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpGetNumPipePackets",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpGetMaxPipePackets",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupReserveReadPipePackets",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupReserveWritePipePackets",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupCommitReadPipe",
      "grammar": "core",
      "properties": [
        "action",
        "scoped"
      ]
    },
    {
      "opname": "OpGroupCommitWritePipe",
      "grammar": "core",
      "properties": [
        "action",
        "scoped"
      ]
    },
    {
      "opname": "OpEnqueueMarker",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpEnqueueKernel",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpGetKernelNDrangeSubGroupCount",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpGetKernelNDrangeMaxSubGroupSize",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpGetKernelWorkGroupSize",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpGetKernelPreferredWorkGroupSizeMultiple",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpRetainEvent",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpReleaseEvent",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpCreateUserEvent",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpIsValidEvent",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSetUserEventStatus",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpCaptureEventProfilingInfo",
      "grammar": "core",
      "properties": [
        "trinary",
        "action"
      ]
    },
    {
      "opname": "OpGetDefaultQueue",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpBuildNDRange",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseSampleImplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseSampleExplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseSampleDrefImplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseSampleDrefExplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseSampleProjImplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseSampleProjExplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseSampleProjDrefImplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseSampleProjDrefExplicitLod",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseFetch",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseGather",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseDrefGather",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSparseTexelsResident",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpNoLine",
      "grammar": "core",
      "properties": [
        "end-source-position",
        "action"
      ]
    },
    {
      "opname": "OpAtomicFlagTestAndSet",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicFlagClear",
      "grammar": "core",
      "properties": [
        "action",
        "atomic-op",
        "unary"
      ]
    },
    {
      "opname": "OpImageSparseRead",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpSizeOf",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpTypePipeStorage",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpConstantPipeStorage",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "constant",
        "result-type"
      ]
    },
    {
      "opname": "OpCreatePipeFromPipeStorage",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpGetKernelLocalSizeForSubgroupCount",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpGetKernelMaxNumSubgroups",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpTypeNamedBarrier",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpNamedBarrierInitialize",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpMemoryNamedBarrier",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpModuleProcessed",
      "grammar": "core",
      "properties": [
        "debug",
        "module-processing-step"
      ]
    },
    {
      "opname": "OpExecutionModeId",
      "grammar": "core",
      "properties": [
        "set-execution-mode-id"
      ]
    },
    {
      "opname": "OpDecorateId",
      "grammar": "core",
      "properties": [
        "adds-property",
        "property-type-id"
      ]
    },
    {
      "opname": "OpGroupNonUniformElect",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformAll",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformAny",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformAllEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBroadcast",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBroadcastFirst",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBallot",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformInverseBallot",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBallotBitExtract",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBallotBitCount",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBallotFindLSB",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBallotFindMSB",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformShuffle",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformShuffleXor",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformShuffleUp",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformShuffleDown",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformIAdd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformFAdd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformIMul",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformFMul",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformSMin",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformUMin",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformFMin",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformSMax",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformUMax",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformFMax",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBitwiseAnd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBitwiseOr",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformBitwiseXor",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformLogicalAnd",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformLogicalOr",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformLogicalXor",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformQuadBroadcast",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformQuadSwap",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpCopyLogical",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpPtrEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpPtrNotEqual",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpPtrDiff",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpColorAttachmentReadEXT",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpDepthAttachmentReadEXT",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpStencilAttachmentReadEXT",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpTerminateInvocation",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpSubgroupBallotKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupFirstInvocationKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAllKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAnyKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAllEqualKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformRotateKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupReadInvocationKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpExtInstWithForwardRefsKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpTraceRayKHR",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpExecuteCallableKHR",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpConvertUToAccelerationStructureKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpIgnoreIntersectionKHR",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpTerminateRayKHR",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpSDot",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSDotKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUDot",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUDotKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSUDot",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSUDotKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSDotAccSat",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSDotAccSatKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpUDotAccSat",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpUDotAccSatKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSUDotAccSat",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSUDotAccSatKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpTypeCooperativeMatrixKHR",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpCooperativeMatrixLoadKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpCooperativeMatrixStoreKHR",
      "grammar": "core",
      "properties": [
        "trinary",
        "action"
      ]
    },
    {
      "opname": "OpCooperativeMatrixMulAddKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpCooperativeMatrixLengthKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConstantCompositeReplicateEXT",
      "grammar": "core",
      "properties": [
        "composite-constant",
        "unary",
        "result-type",
        "allocates-id",
        "constant"
      ]
    },
    {
      "opname": "OpSpecConstantCompositeReplicateEXT",
      "grammar": "core",
      "properties": [
        "spec-constant",
        "composite-constant",
        "unary",
        "result-type",
        "allocates-id"
      ]
    },
    {
      "opname": "OpCompositeConstructReplicateEXT",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpTypeRayQueryKHR",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpRayQueryInitializeKHR",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpRayQueryTerminateKHR",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpRayQueryGenerateIntersectionKHR",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpRayQueryConfirmIntersectionKHR",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpRayQueryProceedKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionTypeKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageSampleWeightedQCOM",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageBoxFilterQCOM",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageBlockMatchSSDQCOM",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageBlockMatchSADQCOM",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageBlockMatchWindowSSDQCOM",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageBlockMatchWindowSADQCOM",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageBlockMatchGatherSSDQCOM",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpImageBlockMatchGatherSADQCOM",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupIAddNonUniformAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupFAddNonUniformAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupFMinNonUniformAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupUMinNonUniformAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupSMinNonUniformAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupFMaxNonUniformAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupUMaxNonUniformAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupSMaxNonUniformAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpFragmentMaskFetchAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpFragmentFetchAMD",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpReadClockKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpFinalizeNodePayloadsAMDX",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpFinishWritingNodePayloadAMDX",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpInitializeNodePayloadsAMDX",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpGroupNonUniformQuadAllKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupNonUniformQuadAnyKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectRecordHitMotionNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpHitObjectRecordHitWithIndexMotionNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpHitObjectRecordMissMotionNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpHitObjectGetWorldToObjectNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetObjectToWorldNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetObjectRayDirectionNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetObjectRayOriginNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectTraceRayMotionNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpHitObjectGetShaderRecordBufferHandleNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetShaderBindingTableRecordIndexNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectRecordEmptyNV",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpHitObjectTraceRayNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpHitObjectRecordHitNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpHitObjectRecordHitWithIndexNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpHitObjectRecordMissNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpHitObjectExecuteShaderNV",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpHitObjectGetCurrentTimeNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetAttributesNV",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpHitObjectGetHitKindNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetPrimitiveIndexNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetGeometryIndexNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetInstanceIdNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetInstanceCustomIndexNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetWorldRayDirectionNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetWorldRayOriginNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetRayTMaxNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectGetRayTMinNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectIsEmptyNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectIsHitNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpHitObjectIsMissNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpReorderThreadWithHitObjectNV",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpReorderThreadWithHintNV",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpTypeHitObjectNV",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpImageSampleFootprintNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "sampled-image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpEmitMeshTasksEXT",
      "grammar": "core",
      "properties": [
        "trinary",
        "action"
      ]
    },
    {
      "opname": "OpSetMeshOutputsEXT",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpGroupNonUniformPartitionNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpWritePackedPrimitiveIndices4x8NV",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpFetchMicroTriangleVertexPositionNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpFetchMicroTriangleVertexBarycentricNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpReportIntersectionKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpReportIntersectionNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpIgnoreIntersectionNV",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpTerminateRayNV",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpTraceNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpTraceMotionNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpTraceRayMotionNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionTriangleVertexPositionsKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpTypeAccelerationStructureKHR",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAccelerationStructureNV",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpExecuteCallableNV",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpTypeCooperativeMatrixNV",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpCooperativeMatrixLoadNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpCooperativeMatrixStoreNV",
      "grammar": "core",
      "properties": [
        "action",
        "multinary"
      ]
    },
    {
      "opname": "OpCooperativeMatrixMulAddNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpCooperativeMatrixLengthNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpBeginInvocationInterlockEXT",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpEndInvocationInterlockEXT",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpDemoteToHelperInvocation",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpDemoteToHelperInvocationEXT",
      "grammar": "core",
      "properties": [
        "action"
      ]
    },
    {
      "opname": "OpIsHelperInvocationEXT",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertUToImageNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertUToSamplerNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertImageToUNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertSamplerToUNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertUToSampledImageNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertSampledImageToUNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpRawAccessChainNV",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupShuffleINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupShuffleDownINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupShuffleUpINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupShuffleXorINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupBlockReadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupBlockWriteINTEL",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "OpSubgroupImageBlockReadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupImageBlockWriteINTEL",
      "grammar": "core",
      "properties": [
        "image-op",
        "action"
      ]
    },
    {
      "opname": "OpSubgroupImageMediaBlockReadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "image-op",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupImageMediaBlockWriteINTEL",
      "grammar": "core",
      "properties": [
        "image-op",
        "action"
      ]
    },
    {
      "opname": "OpUCountLeadingZerosINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpUCountTrailingZerosINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAbsISubINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpAbsUSubINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpIAddSatINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUAddSatINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpIAverageINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUAverageINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpIAverageRoundedINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUAverageRoundedINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpISubSatINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUSubSatINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpIMul32x16INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpUMul32x16INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpConstantFunctionPointerINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "constant",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpFunctionPointerCallINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpAsmTargetINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpAsmINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpAsmCallINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicFMinEXT",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicFMaxEXT",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAssumeTrueKHR",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpExpectKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpDecorateString",
      "grammar": "core",
      "properties": [
        "adds-property",
        "property-type-string"
      ]
    },
    {
      "opname": "OpDecorateStringGOOGLE",
      "grammar": "core",
      "properties": [
        "adds-property",
        "property-type-string"
      ]
    },
    {
      "opname": "OpMemberDecorateString",
      "grammar": "core",
      "properties": [
        "adds-property",
        "property-type-string",
        "member-property"
      ]
    },
    {
      "opname": "OpMemberDecorateStringGOOGLE",
      "grammar": "core",
      "properties": [
        "adds-property",
        "property-type-string",
        "member-property"
      ]
    },
    {
      "opname": "OpVmeImageINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpTypeVmeImageINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcImePayloadINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcRefPayloadINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcSicPayloadINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcMcePayloadINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcMceResultINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcImeResultINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcImeResultSingleReferenceStreamoutINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcImeResultDualReferenceStreamoutINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcImeSingleReferenceStreaminINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcImeDualReferenceStreaminINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcRefResultINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeAvcSicResultINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceSetInterShapePenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceSetInterDirectionPenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceSetAcOnlyHaarINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceConvertToImePayloadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceConvertToImeResultINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceConvertToRefPayloadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceConvertToRefResultINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceConvertToSicPayloadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceConvertToSicResultINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetMotionVectorsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetInterDistortionsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetBestInterDistortionsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetInterMajorShapeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetInterMinorShapeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetInterDirectionsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetInterMotionVectorCountINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetInterReferenceIdsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeInitializeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeSetSingleReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeSetDualReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeRefWindowSizeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeAdjustRefOffsetINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeConvertToMcePayloadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeSetMaxMotionVectorCountINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeSetUnidirectionalMixDisableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeSetWeightedSadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeEvaluateWithDualReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeConvertToMceResultINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetSingleReferenceStreaminINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetDualReferenceStreaminINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeStripSingleReferenceStreamoutINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeStripDualReferenceStreamoutINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetBorderReachedINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetTruncatedSearchIndicationINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcFmeInitializeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcBmeInitializeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcRefConvertToMcePayloadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcRefSetBidirectionalMixDisableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcRefSetBilinearFilterEnableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcRefEvaluateWithDualReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcRefConvertToMceResultINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicInitializeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicConfigureSkcINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicConfigureIpeLumaINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicConfigureIpeLumaChromaINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetMotionVectorMaskINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicConvertToMcePayloadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicSetBilinearFilterEnableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicSetSkcForwardTransformEnableINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicEvaluateIpeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicEvaluateWithDualReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "multinary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicConvertToMceResultINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetIpeLumaShapeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetBestIpeLumaDistortionINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetBestIpeChromaDistortionINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetPackedIpeLumaModesINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetIpeChromaModeINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSubgroupAvcSicGetInterRawSadsINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpVariableLengthArrayINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpSaveMemoryINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpRestoreMemoryINTEL",
      "grammar": "core",
      "properties": [
        "action",
        "unary"
      ]
    },
    {
      "opname": "OpArbitraryFloatSinCosPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatCastINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatCastFromIntINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatCastToIntINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatAddINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatSubINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatMulINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatDivINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatGTINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatGEINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatLTINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatLEINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatEQINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatRecipINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatRSqrtINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatCbrtINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatHypotINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatSqrtINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatLogINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatLog2INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatLog10INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatLog1pINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatExpINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatExp2INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatExp10INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatExpm1INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatSinINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatCosINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatSinCosINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatSinPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatCosPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatASinINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatASinPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatACosINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatACosPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatATanINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatATanPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatATan2INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatPowINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatPowRINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpArbitraryFloatPowNINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpAliasDomainDeclINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id"
      ]
    },
    {
      "opname": "OpAliasScopeDeclINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id"
      ]
    },
    {
      "opname": "OpAliasScopeListDeclINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id"
      ]
    },
    {
      "opname": "OpFixedSqrtINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedRecipINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedRsqrtINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedSinINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedCosINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedSinCosINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedSinPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedCosPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedSinCosPiINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedLogINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFixedExpINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpPtrCastToCrossWorkgroupINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpCrossWorkgroupCastToPtrINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpReadPipeBlockingINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpWritePipeBlockingINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpFPGARegINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetRayTMinKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetRayFlagsKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionTKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionInstanceCustomIndexKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionInstanceIdKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionGeometryIndexKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionPrimitiveIndexKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionBarycentricsKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionFrontFaceKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionCandidateAABBOpaqueKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionObjectRayDirectionKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionObjectRayOriginKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetWorldRayDirectionKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetWorldRayOriginKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionObjectToWorldKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpRayQueryGetIntersectionWorldToObjectKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "OpAtomicFAddEXT",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "atomic-op",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpTypeBufferSurfaceINTEL",
      "grammar": "core",
      "properties": [
        "typedef",
        "allocates-id"
      ]
    },
    {
      "opname": "OpTypeStructContinuedINTEL",
      "grammar": "core",
      "properties": [
        "typedef"
      ]
    },
    {
      "opname": "OpConstantCompositeContinuedINTEL",
      "grammar": "core",
      "properties": [
        "composite-constant",
        "constant"
      ]
    },
    {
      "opname": "OpSpecConstantCompositeContinuedINTEL",
      "grammar": "core",
      "properties": [
        "spec-constant",
        "composite-constant"
      ]
    },
    {
      "opname": "OpCompositeConstructContinuedINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertFToBF16INTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpConvertBF16ToFINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpControlBarrierArriveINTEL",
      "grammar": "core",
      "properties": [
        "action",
        "scoped"
      ]
    },
    {
      "opname": "OpControlBarrierWaitINTEL",
      "grammar": "core",
      "properties": [
        "action",
        "scoped"
      ]
    },
    {
      "opname": "OpGroupIMulKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupFMulKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupBitwiseAndKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupBitwiseOrKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupBitwiseXorKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupLogicalAndKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupLogicalOrKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpGroupLogicalXorKHR",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "grouped",
        "scoped",
        "result-type"
      ]
    },
    {
      "opname": "OpMaskedGatherINTEL",
      "grammar": "core",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "OpMaskedScatterINTEL",
      "grammar": "core",
      "properties": [
        "binary",
        "action"
      ]
    },
    {
      "opname": "Round",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "RoundEven",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Trunc",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "FAbs",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "SAbs",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "FSign",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "SSign",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Floor",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Ceil",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Fract",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Radians",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Degrees",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Sin",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Cos",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Tan",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Asin",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Acos",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Atan",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Sinh",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Cosh",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Tanh",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Asinh",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Acosh",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Atanh",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Atan2",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "Pow",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "Exp",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Log",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Exp2",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Log2",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Sqrt",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "InverseSqrt",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Determinant",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "MatrixInverse",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Modf",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "ModfStruct",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "FMin",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "UMin",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "SMin",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "FMax",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "UMax",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "SMax",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "FClamp",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "UClamp",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "SClamp",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "FMix",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "IMix",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "Step",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "SmoothStep",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "Fma",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "Frexp",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "FrexpStruct",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Ldexp",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "PackSnorm4x8",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "PackUnorm4x8",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "PackSnorm2x16",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "PackUnorm2x16",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "PackHalf2x16",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "PackDouble2x32",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "UnpackSnorm2x16",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "UnpackUnorm2x16",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "UnpackHalf2x16",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "UnpackSnorm4x8",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "UnpackUnorm4x8",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "UnpackDouble2x32",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Length",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "Distance",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "Cross",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "Normalize",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "FaceForward",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "Reflect",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "Refract",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "FindILsb",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "FindSMsb",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "FindUMsb",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "InterpolateAtCentroid",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "InterpolateAtSample",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "InterpolateAtOffset",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "NMin",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "NMax",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "NClamp",
      "grammar": "GLSL.std.450",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "CubeFaceIndexAMD",
      "grammar": "SPV_AMD_gcn_shader",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "CubeFaceCoordAMD",
      "grammar": "SPV_AMD_gcn_shader",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "TimeAMD",
      "grammar": "SPV_AMD_gcn_shader",
      "properties": [
        "allocates-id",
        "result-type"
      ]
    },
    {
      "opname": "SwizzleInvocationsAMD",
      "grammar": "SPV_AMD_shader_ballot",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "SwizzleInvocationsMaskedAMD",
      "grammar": "SPV_AMD_shader_ballot",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "WriteInvocationAMD",
      "grammar": "SPV_AMD_shader_ballot",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "MbcntAMD",
      "grammar": "SPV_AMD_shader_ballot",
      "properties": [
        "allocates-id",
        "unary",
        "result-type"
      ]
    },
    {
      "opname": "InterpolateAtVertexAMD",
      "grammar": "SPV_AMD_shader_explicit_vertex_parameter",
      "properties": [
        "allocates-id",
        "binary",
        "result-type"
      ]
    },
    {
      "opname": "FMin3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "UMin3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "SMin3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "FMax3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "UMax3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "SMax3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "FMid3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "UMid3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    },
    {
      "opname": "SMid3AMD",
      "grammar": "SPV_AMD_shader_trinary_minmax",
      "properties": [
        "allocates-id",
        "trinary",
        "result-type"
      ]
    }
  ],
  "info": [
    "Auto generated extended grammar by spirv_meta_data_tools.make_extended_grammar_json_ready_def"
  ]
}