// Copyright (C) Gaijin Games KFT.  All rights reserved.

DX12_HARDWARE_COMMAND(COPY_TEXTURE_REGION, "CopyTextureRegion", D3D12_TEXTURE_COPY_LOCATION, UINT, UINT, UINT,
  D3D12_TEXTURE_COPY_LOCATION, eastl::optional<D3D12_BOX>)

DX12_HARDWARE_COMMAND(COPY_BUFFER_REGION, "CopyBufferRegion", ID3D12Resource *, UINT64, ID3D12Resource *, UINT64, UINT64)

DX12_HARDWARE_COMMAND(RESOURCE_BARRIER, "ResourceBarrier", UINT /*, const D3D12_RESOURCE_BARRIER **/)

DX12_HARDWARE_COMMAND(COPY_RESOURCE, "CopyResource", ID3D12Resource *, ID3D12Resource *)

DX12_HARDWARE_COMMAND(END_QUERY, "EndQuery", ID3D12QueryHeap *, D3D12_QUERY_TYPE, UINT)

DX12_HARDWARE_COMMAND(RESOLVE_QUERY_DATA, "ResolveQueryData", ID3D12QueryHeap *, D3D12_QUERY_TYPE, UINT, UINT, ID3D12Resource *,
  UINT64)

DX12_HARDWARE_COMMAND(SET_DESCRIPTOR_HEAPS, "SetDescriptorHeaps", UINT, eastl::span<ID3D12DescriptorHeap *const>)

DX12_HARDWARE_COMMAND(CLEAR_UNORDERED_ACCESS_VIEW_FLOAT, "ClearUnorderedAccessViewFloat", D3D12_GPU_DESCRIPTOR_HANDLE,
  D3D12_CPU_DESCRIPTOR_HANDLE, ID3D12Resource * /*, const FLOAT[4]*/, UINT /*, const D3D12_RECT **/)

DX12_HARDWARE_COMMAND(CLEAR_UNORDERED_ACCESS_VIEW_UINT, "ClearUnorderedAccessViewUint", D3D12_GPU_DESCRIPTOR_HANDLE,
  D3D12_CPU_DESCRIPTOR_HANDLE, ID3D12Resource * /*, const UINT[4]*/, UINT /*, const D3D12_RECT **/)

DX12_HARDWARE_COMMAND(SET_COMPUTE_ROOT_SIGNATURE, "SetComputeRootSignature", ID3D12RootSignature *)

DX12_HARDWARE_COMMAND(SET_PIPELINE_STATE, "SetPipelineState", ID3D12PipelineState *)

DX12_HARDWARE_COMMAND(DISPATCH, "Dispatch", UINT, UINT, UINT)

DX12_HARDWARE_COMMAND(EXECUTE_INDIRECT, "ExecuteIndirect", ID3D12CommandSignature *, UINT, ID3D12Resource *, UINT64, ID3D12Resource *,
  UINT64)

DX12_HARDWARE_COMMAND(SET_COMPUTE_ROOT_CONSTANT_BUFFER_VIEW, "SetComputeRootConstantBufferView", UINT, D3D12_GPU_VIRTUAL_ADDRESS)

DX12_HARDWARE_COMMAND(SET_COMPUTE_ROOT_DESCRIPTOR_TABLE, "SetComputeRootDescriptorTable", UINT, D3D12_GPU_DESCRIPTOR_HANDLE)

DX12_HARDWARE_COMMAND(SET_COMPUTE_ROOT_32BIT_CONSTANTS, "SetComputeRoot32BitConstants", UINT, UINT, const void *, UINT)

DX12_HARDWARE_COMMAND(DISCARD_RESOURCE, "DiscardResource", ID3D12Resource *, eastl::optional<D3D12_DISCARD_REGION>)

DX12_HARDWARE_COMMAND(SET_PREDICATION, "SetPredication", ID3D12Resource *, UINT64, D3D12_PREDICATION_OP)

DX12_HARDWARE_COMMAND(CLEAR_RENDER_TARGET_VIEW, "ClearRenderTargetView", D3D12_CPU_DESCRIPTOR_HANDLE /*, const FLOAT[4]*/,
  UINT /*, const D3D12_RECT **/)

DX12_HARDWARE_COMMAND(RESOLVE_SUBRESOURCE, "ResolveSubresource", ID3D12Resource *, UINT, ID3D12Resource *, UINT, DXGI_FORMAT)

DX12_HARDWARE_COMMAND(CLEAR_DEPTH_STENCIL_VIEW, "ClearDepthStencilView", D3D12_CPU_DESCRIPTOR_HANDLE, D3D12_CLEAR_FLAGS, FLOAT, UINT8,
  UINT /*, const D3D12_RECT **/)

DX12_HARDWARE_COMMAND(BEGIN_QUERY, "BeginQuery", ID3D12QueryHeap *, D3D12_QUERY_TYPE, UINT)

DX12_HARDWARE_COMMAND(WRITE_BUFFER_IMMEDIATE, "WriteBufferImmediate",
  UINT /*, const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER *, const D3D12_WRITEBUFFERIMMEDIATE_MODE **/)

DX12_HARDWARE_COMMAND(OM_SET_RENDER_TARGETS, "OMSetRenderTargets", UINT /*, const D3D12_CPU_DESCRIPTOR_HANDLE **/,
  BOOL /*, const D3D12_CPU_DESCRIPTOR_HANDLE **/)

DX12_HARDWARE_COMMAND(SET_GRAPHICS_ROOT_SIGNATURE, "SetGraphicsRootSignature", ID3D12RootSignature *)

DX12_HARDWARE_COMMAND(IA_SET_PRIMITIVE_TOPOLOGY, "IASetPrimitiveTopology", D3D12_PRIMITIVE_TOPOLOGY)

DX12_HARDWARE_COMMAND(OM_SET_DEPTH_BOUNDS, "OMSetDepthBounds", FLOAT, FLOAT)

DX12_HARDWARE_COMMAND(OM_SET_BLEND_FACTOR, "OMSetBlendFactor" /*, const FLOAT[4]*/)

DX12_HARDWARE_COMMAND(RS_SET_SCISSOR_RECTS, "RSSetScissorRects", UINT /*, const D3D12_RECT **/)

DX12_HARDWARE_COMMAND(RS_SET_VIEWPORTS, "RSSetViewports", UINT /*, const D3D12_VIEWPORT **/)

DX12_HARDWARE_COMMAND(OM_SET_STENCIL_REF, "OMSetStencilRef", UINT)

DX12_HARDWARE_COMMAND(DRAW_INSTANCED, "DrawInstanced", UINT, UINT, UINT, UINT)

DX12_HARDWARE_COMMAND(DRAW_INDEXED_INSTANCED, "DrawIndexedInstanced", UINT, UINT, UINT, INT, UINT)

DX12_HARDWARE_COMMAND(SET_GRAPHICS_ROOT_32BIT_CONSTANTS, "SetGraphicsRoot32BitConstants", UINT, UINT, const void *, UINT)

DX12_HARDWARE_COMMAND(SET_GRAPHICS_ROOT_DESCRIPTOR_TABLE, "SetGraphicsRootDescriptorTable", UINT, D3D12_GPU_DESCRIPTOR_HANDLE)

DX12_HARDWARE_COMMAND(SET_GRAPHICS_ROOT_CONSTANT_BUFFER_VIEW, "SetGraphicsRootConstantBufferView", UINT, D3D12_GPU_VIRTUAL_ADDRESS)

DX12_HARDWARE_COMMAND(IA_SET_VERTEX_BUFFERS, "IASetVertexBuffers", UINT, UINT /*, const D3D12_VERTEX_BUFFER_VIEW **/)

DX12_HARDWARE_COMMAND(IA_SET_INDEX_BUFFER, "IASetIndexBuffer", eastl::optional<D3D12_INDEX_BUFFER_VIEW>)

DX12_HARDWARE_COMMAND(SO_SET_TARGETS, "SOSetTargets", UINT, UINT)

#if !_TARGET_XBOXONE

DX12_HARDWARE_COMMAND(RS_SET_SHADING_RATE, "RSSetShadingRate", D3D12_SHADING_RATE /*, const D3D12_SHADING_RATE_COMBINER **/)

DX12_HARDWARE_COMMAND(RS_SET_SHADING_RATE_IMAGE, "RSSetShadingRateImage", ID3D12Resource *)

DX12_HARDWARE_COMMAND(DISPATCH_MESH, "DispatchMesh", UINT, UINT, UINT)

#endif

#if D3D_HAS_RAY_TRACING

DX12_HARDWARE_COMMAND(BUILD_RAYTRACING_ACCELERATION_STRUCTURE, "BuildRaytracingAccelerationStructure",
  D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC, UINT /*, const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC **/)

DX12_HARDWARE_COMMAND(COPY_RAYTRACING_ACCELERATION_STRUCTURE, "CopyRaytracingAccelerationStructure", D3D12_GPU_VIRTUAL_ADDRESS,
  D3D12_GPU_VIRTUAL_ADDRESS, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)

DX12_HARDWARE_COMMAND(SET_PIPELINE_STATE1, "SetPipelineState1", ID3D12StateObject *)

DX12_HARDWARE_COMMAND(DISPATCH_RAYS, "DispatchRays", D3D12_DISPATCH_RAYS_DESC)

#endif

#if _TARGET_XBOX
#include "command_list_cmd_xbox.inc.h"
#endif
