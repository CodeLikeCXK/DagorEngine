include "shader_global.dshl"

int gpu_hang_uav_no = 7;

shader hang_gpu_cs
{
  supports none;
  supports global_frame;

  if (hardware.metal)
  {
    dont_render;
  }

  (cs) {
    gpu_hang_uav@uav : register(gpu_hang_uav_no) hlsl { RWTexture2D<uint> gpu_hang_uav@uav; }
  }

  hlsl(cs) {
    [numthreads( 32, 32, 1 )]
    void hang_gpu()
    {
      float foo;
      for (int i = 0; i < 1000000000; ++i)
        InterlockedAdd(gpu_hang_uav[uint2(0,0)], 1, foo);
    }
  }

  compile("target_cs", "hang_gpu");
}
